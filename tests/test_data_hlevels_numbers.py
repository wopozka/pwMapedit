import pytest
import sys
import os.path
sys.path.append(os.path.join(os.path.dirname(__file__), '../'))
import map_items
import projection
from PyQt5.QtGui import QPainterPath, QPolygonF
from PyQt5.QtCore import QPointF, QLineF

DATA_TEST = (
    (('Data0=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',), [0]),
    (('Data0=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)', 'Data1=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)'), [0, 1]),
    (('Data0=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)', 'Data2=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)'), [0, 2]),
    (('Data0=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)', 'Data1=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)', 'Data2=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)'), [0, 1, 2]),
    (('Data0=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data0=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data1=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data1=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data2=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data2=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)'), [0, 1, 2]),

)
@pytest.mark.parametrize('target, answer', DATA_TEST)
def test_data_levels(target, answer):
    proj = projection.Mercator(None)
    data_obj = map_items.Data_X1(projection=proj)
    for dataline in target:
        data_obj.add_nodes_from_string(dataline)
    assert data_obj.get_data_levels() == answer


DATA_TEST = (
    (('Data0=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data0=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data1=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data1=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data2=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data2=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data2=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)'), (2, 2)),
    (('Data0=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data0=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data1=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data1=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data2=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data2=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)',
      'Data4=(52.42016,20.68638),(52.42011,20.68643),(52.42007,20.68651)'), (4, 0)),

)
@pytest.mark.parametrize('target, answer', DATA_TEST)
def test_data_levels(target, answer):
    proj = projection.Mercator(None)
    data_obj = map_items.Data_X1(projection=proj)
    for dataline in target:
        data_obj.add_nodes_from_string(dataline)
    assert data_obj.get_last_data_level_and_last_index() == answer

